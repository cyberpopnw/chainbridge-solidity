{
  "contractName": "HandlerHelpers",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bridgeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_bridgeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_burnList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_contractWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "_resourceIDToTokenContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_tokenContractAddressToResourceID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resourceID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setResource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setBurnable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_bridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_burnList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_contractWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_resourceIDToTokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tokenContractAddressToResourceID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"bridgeAddress\":\"Contract address of previously deployed Bridge.\"}},\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(bytes)\":{\"params\":{\"data\":\"ABI-encoded withdrawal params relevant to the handler.\"}}},\"title\":\"Function used across handler contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBurnable(address)\":{\"notice\":\"First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true.\"},\"setResource(bytes32,address)\":{\"notice\":\"First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}.\"},\"withdraw(bytes)\":{\"notice\":\"Withdraw funds from ERC safes.\"}},\"notice\":\"This contract is intended to be used with the Bridge contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/handlers/HandlerHelpers.sol\":\"HandlerHelpers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/handlers/HandlerHelpers.sol\":{\"keccak256\":\"0xf3c9052efccc0cb34156e594e61191491c847273308854802d88e85fd130807f\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://894174133e2c5af6f5d897fcb476b47d3f8d21e829c21ec389e542ce4201b839\",\"dweb:/ipfs/QmSx5RychyrVZ51qJcWUs7S6vFHqZ4LncLz1VvpaRdZYeT\"]},\"project:/contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0x714f0913ed27ed7b98efe1b368a79ae57bb61bbce5b5983f837a0b24dc014649\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://1b394cf6f1b2b775207d8401c19701104585f39732e16c0de2f1ad3ff22a757c\",\"dweb:/ipfs/QmQFY1fPBxjWgswnWMBs3QxcukxS2jQofe7i8VgnCiWhYY\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161054538038061054583398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516104b46100916000396000818160fe015261022801526104b46000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636a70d0811161005b5780636a70d081146101205780637f79bea814610153578063b8fa373614610176578063c8ba6c871461018957600080fd5b806307b7ed991461008d5780630968f264146100a25780630a6d55d8146100b3578063318c136e146100f9575b600080fd5b6100a061009b366004610350565b6101b7565b005b6100a06100b0366004610388565b50565b6100dc6100c1366004610439565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100dc7f000000000000000000000000000000000000000000000000000000000000000081565b61014361012e366004610350565b60036020526000908152604090205460ff1681565b60405190151581526020016100f0565b610143610161366004610350565b60026020526000908152604090205460ff1681565b6100a0610184366004610452565b6101c8565b6101a9610197366004610350565b60016020526000908152604090205481565b6040519081526020016100f0565b6101bf61021d565b6100b08161029c565b6101d061021d565b60008281526020818152604080832080546001600160a01b0319166001600160a01b039590951694851790559282526001808252838320949094556002905220805460ff19169091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461029a5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526002602052604090205460ff166103105760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610291565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b80356001600160a01b038116811461034b57600080fd5b919050565b60006020828403121561036257600080fd5b61036b82610334565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561039a57600080fd5b813567ffffffffffffffff808211156103b257600080fd5b818401915084601f8301126103c657600080fd5b8135818111156103d8576103d8610372565b604051601f8201601f19908116603f0116810190838211818310171561040057610400610372565b8160405282815287602084870101111561041957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561044b57600080fd5b5035919050565b6000806040838503121561046557600080fd5b8235915061047560208401610334565b9050925092905056fea2646970667358221220ea464478fbce63190e5f4f4f97bc72fb50acf0e06d5635cef01e205bdf2a2eab64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80636a70d0811161005b5780636a70d081146101205780637f79bea814610153578063b8fa373614610176578063c8ba6c871461018957600080fd5b806307b7ed991461008d5780630968f264146100a25780630a6d55d8146100b3578063318c136e146100f9575b600080fd5b6100a061009b366004610350565b6101b7565b005b6100a06100b0366004610388565b50565b6100dc6100c1366004610439565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100dc7f000000000000000000000000000000000000000000000000000000000000000081565b61014361012e366004610350565b60036020526000908152604090205460ff1681565b60405190151581526020016100f0565b610143610161366004610350565b60026020526000908152604090205460ff1681565b6100a0610184366004610452565b6101c8565b6101a9610197366004610350565b60016020526000908152604090205481565b6040519081526020016100f0565b6101bf61021d565b6100b08161029c565b6101d061021d565b60008281526020818152604080832080546001600160a01b0319166001600160a01b039590951694851790559282526001808252838320949094556002905220805460ff19169091179055565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461029a5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526002602052604090205460ff166103105760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610291565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b80356001600160a01b038116811461034b57600080fd5b919050565b60006020828403121561036257600080fd5b61036b82610334565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561039a57600080fd5b813567ffffffffffffffff808211156103b257600080fd5b818401915084601f8301126103c657600080fd5b8135818111156103d8576103d8610372565b604051601f8201601f19908116603f0116810190838211818310171561040057610400610372565b8160405282815287602084870101111561041957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561044b57600080fd5b5035919050565b6000806040838503121561046557600080fd5b8235915061047560208401610334565b9050925092905056fea2646970667358221220ea464478fbce63190e5f4f4f97bc72fb50acf0e06d5635cef01e205bdf2a2eab64736f6c634300080b0033",
  "immutableReferences": {
    "10398": [
      {
        "length": 32,
        "start": 254
      },
      {
        "length": 32,
        "start": 552
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:60",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:60",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:60"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:60"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:60"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:60",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:60",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:60"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:60"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:60"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:60"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:60"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:60",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:60",
                "type": ""
              }
            ],
            "src": "14:290:60"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 60,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3228:60",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:60",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:60"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:60"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:60"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:60"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:60",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:60",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:60"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:60"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:60"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:60"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:60"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:60"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:60",
                "type": ""
              }
            ],
            "src": "14:173:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:60",
                "type": ""
              }
            ],
            "src": "192:186:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "415:95:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "432:1:60",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "439:3:60",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "444:10:60",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "435:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "435:20:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "425:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:31:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "425:31:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "472:1:60",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:4:60",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "465:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:15:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "465:15:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:1:60",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "499:4:60",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "489:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:15:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "489:15:60"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "383:127:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "594:842:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "640:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "649:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "652:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "642:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "642:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "642:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "615:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "624:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "611:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "636:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "607:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "604:52:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "665:37:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "692:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "679:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:23:60"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "669:6:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "711:28:60",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "721:18:60",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "715:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "766:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "775:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "778:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "768:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "768:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "768:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "754:6:60"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "762:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "751:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:14:60"
                  },
                  "nodeType": "YulIf",
                  "src": "748:34:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "791:32:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:60"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "816:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:22:60"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "795:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "871:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "880:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "883:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "873:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "873:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "873:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "850:2:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "854:4:60",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "846:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "846:13:60"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "861:7:60"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "842:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "842:27:60"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "835:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:35:60"
                  },
                  "nodeType": "YulIf",
                  "src": "832:55:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "896:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "919:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "906:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:16:60"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "900:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "945:22:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "947:16:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "947:18:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "947:18:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "937:2:60"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "941:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "934:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:10:60"
                  },
                  "nodeType": "YulIf",
                  "src": "931:36:60"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "976:17:60",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "990:2:60",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "986:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:7:60"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "980:2:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1002:23:60",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:2:60",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1016:5:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:9:60"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1006:6:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1034:71:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1056:6:60"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1080:2:60"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1084:4:60",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1076:3:60"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1076:13:60"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1091:2:60"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1072:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1072:22:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1096:2:60",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1068:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1068:31:60"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1101:2:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1064:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:40:60"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1052:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:53:60"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1038:10:60",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1164:22:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1166:16:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1166:18:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1166:18:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1123:10:60"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1135:2:60"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1120:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1120:18:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1143:10:60"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:60"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1140:2:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1140:22:60"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1117:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:46:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1114:72:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1202:2:60",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1206:10:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1195:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:22:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1195:22:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1233:6:60"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1241:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:18:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:18:60"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1290:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1299:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1292:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1292:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1292:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1267:2:60"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1271:2:60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1263:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1263:11:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1259:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1259:20:60"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1281:7:60"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:2:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:33:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:53:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1332:6:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1340:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1328:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1328:15:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1349:2:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1353:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1345:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1345:11:60"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1358:2:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1315:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:46:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1315:46:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1385:6:60"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1393:2:60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1381:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1381:15:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1398:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1377:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1377:24:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:1:60",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1370:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:35:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1370:35:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1414:16:60",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1424:6:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "560:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "571:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "583:6:60",
                "type": ""
              }
            ],
            "src": "515:921:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1511:110:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1557:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1566:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1569:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1559:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1559:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1559:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1532:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1541:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1528:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1553:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1524:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "1521:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1582:33:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1592:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1592:23:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1582:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1477:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1488:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1500:6:60",
                "type": ""
              }
            ],
            "src": "1441:180:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1727:102:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1737:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1749:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1760:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1745:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1737:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1779:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1794:6:60"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1810:3:60",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1815:1:60",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1806:3:60"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1806:11:60"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1819:1:60",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1802:3:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1802:19:60"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:32:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1772:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:51:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1772:51:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1696:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1707:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1718:4:60",
                "type": ""
              }
            ],
            "src": "1626:203:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1929:92:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1939:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1951:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1962:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1947:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1947:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1939:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1981:9:60"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2006:6:60"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1999:6:60"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1999:14:60"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1992:6:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1992:22:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1974:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:41:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1974:41:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1898:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1909:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1920:4:60",
                "type": ""
              }
            ],
            "src": "1834:187:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2113:167:60",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2159:16:60",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2168:1:60",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2171:1:60",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2161:6:60"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2161:12:60"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2161:12:60"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2134:7:60"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2143:9:60"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2130:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2130:23:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2155:2:60",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2126:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2126:32:60"
                  },
                  "nodeType": "YulIf",
                  "src": "2123:52:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2184:33:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2207:9:60"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2194:12:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2194:23:60"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2184:6:60"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2226:48:60",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2259:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2270:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2255:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2255:18:60"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2236:18:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2236:38:60"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2226:6:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2071:9:60",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2082:7:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2094:6:60",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2102:6:60",
                "type": ""
              }
            ],
            "src": "2026:254:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2386:76:60",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2396:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2408:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2419:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2404:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2404:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2396:4:60"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2438:9:60"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2449:6:60"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2431:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2431:25:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2431:25:60"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2355:9:60",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2366:6:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2377:4:60",
                "type": ""
              }
            ],
            "src": "2285:177:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2641:180:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2658:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2669:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2651:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2651:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2692:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2703:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2688:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2688:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2708:2:60",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2681:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2681:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2681:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2731:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2742:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2727:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2727:18:60"
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2747:32:60",
                        "type": "",
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2720:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2720:60:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2720:60:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2789:26:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2801:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2812:2:60",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2797:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2797:18:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2789:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2618:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2632:4:60",
                "type": ""
              }
            ],
            "src": "2467:354:60"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3000:226:60",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3017:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3028:2:60",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3010:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:21:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3010:21:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3051:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3062:2:60",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3047:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3047:18:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3067:2:60",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3040:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3040:30:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3040:30:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3090:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3101:2:60",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3086:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3086:18:60"
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3106:34:60",
                        "type": "",
                        "value": "provided contract is not whiteli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3079:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3079:62:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3079:62:60"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3161:9:60"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3172:2:60",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3157:3:60"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3157:18:60"
                      },
                      {
                        "hexValue": "73746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3177:6:60",
                        "type": "",
                        "value": "sted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3150:6:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3150:34:60"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3150:34:60"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3193:27:60",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3205:9:60"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3216:3:60",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3201:3:60"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3201:19:60"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3193:4:60"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2977:9:60",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2991:4:60",
                "type": ""
              }
            ],
            "src": "2826:400:60"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"sender must be bridge contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"provided contract is not whiteli\")\n        mstore(add(headStart, 96), \"sted\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 60,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "273:2584:51:-:0;;;970:112;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1045:30:51;;;273:2584;;14:290:60;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:60;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:60:o;:::-;273:2584:51;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "273:2584:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:120;;;;;;:::i;:::-;;:::i;:::-;;2296:65;;;;;;:::i;:::-;2170:120;;408:69;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;408:69:51;;;;;;-1:-1:-1;;;;;1790:32:60;;;1772:51;;1760:2;1745:18;408:69:51;;;;;;;;318:39;;;;;755:42;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1999:14:60;;1992:22;1974:41;;1962:2;1947:18;755:42:51;1834:187:60;652:51:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1774:154;;;;;;:::i;:::-;;:::i;528:69::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2431:25:60;;;2419:2;2404:18;528:69:51;2285:177:60;2170:120:51;836:13;:11;:13::i;:::-;2254:29:::1;2267:15;2254:12;:29::i;1774:154::-:0;836:13;:11;:13::i;:::-;2453:33;:45;;;;;;;;;;;:63;;-1:-1:-1;;;;;;2453:63:51;-1:-1:-1;;;;;2453:63:51;;;;;;;;;2526:50;;;-1:-1:-1;2526:50:51;;;;;;:63;;;;2600:18;:35;;;:42;;-1:-1:-1;;2600:42:51;;;;;;1774:154::o;1088:124::-;1142:10;-1:-1:-1;;;;;1156:14:51;1142:28;;1134:71;;;;-1:-1:-1;;;1134:71:51;;2669:2:60;1134:71:51;;;2651:21:60;2708:2;2688:18;;;2681:30;2747:32;2727:18;;;2720:60;2797:18;;1134:71:51;;;;;;;;;1088:124::o;2655:200::-;-1:-1:-1;;;;;2729:35:51;;;;;;:18;:35;;;;;;;;2721:84;;;;-1:-1:-1;;;2721:84:51;;3028:2:60;2721:84:51;;;3010:21:60;3067:2;3047:18;;;3040:30;3106:34;3086:18;;;3079:62;-1:-1:-1;;;3157:18:60;;;3150:34;3201:19;;2721:84:51;2826:400:60;2721:84:51;-1:-1:-1;;;;;2815:26:51;;;;;:9;:26;;;;;:33;;-1:-1:-1;;2815:33:51;2844:4;2815:33;;;2655:200::o;14:173:60:-;82:20;;-1:-1:-1;;;;;131:31:60;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:60:o;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:921;583:6;636:2;624:9;615:7;611:23;607:32;604:52;;;652:1;649;642:12;604:52;692:9;679:23;721:18;762:2;754:6;751:14;748:34;;;778:1;775;768:12;748:34;816:6;805:9;801:22;791:32;;861:7;854:4;850:2;846:13;842:27;832:55;;883:1;880;873:12;832:55;919:2;906:16;941:2;937;934:10;931:36;;;947:18;;:::i;:::-;1022:2;1016:9;990:2;1076:13;;-1:-1:-1;;1072:22:60;;;1096:2;1068:31;1064:40;1052:53;;;1120:18;;;1140:22;;;1117:46;1114:72;;;1166:18;;:::i;:::-;1206:10;1202:2;1195:22;1241:2;1233:6;1226:18;1281:7;1276:2;1271;1267;1263:11;1259:20;1256:33;1253:53;;;1302:1;1299;1292:12;1253:53;1358:2;1353;1349;1345:11;1340:2;1332:6;1328:15;1315:46;1403:1;1381:15;;;1398:2;1377:24;1370:35;;;;-1:-1:-1;1385:6:60;515:921;-1:-1:-1;;;;;515:921:60:o;1441:180::-;1500:6;1553:2;1541:9;1532:7;1528:23;1524:32;1521:52;;;1569:1;1566;1559:12;1521:52;-1:-1:-1;1592:23:60;;1441:180;-1:-1:-1;1441:180:60:o;2026:254::-;2094:6;2102;2155:2;2143:9;2134:7;2130:23;2126:32;2123:52;;;2171:1;2168;2161:12;2123:52;2207:9;2194:23;2184:33;;2236:38;2270:2;2259:9;2255:18;2236:38;:::i;:::-;2226:48;;2026:254;;;;;:::o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.11;\n\nimport \"../interfaces/IERCHandler.sol\";\n\n/**\n    @title Function used across handler contracts.\n    @author ChainSafe Systems.\n    @notice This contract is intended to be used with the Bridge contract.\n */\ncontract HandlerHelpers is IERCHandler {\n    address public immutable _bridgeAddress;\n\n    // resourceID => token contract address\n    mapping (bytes32 => address) public _resourceIDToTokenContractAddress;\n\n    // token contract address => resourceID\n    mapping (address => bytes32) public _tokenContractAddressToResourceID;\n\n    // token contract address => is whitelisted\n    mapping (address => bool) public _contractWhitelist;\n\n    // token contract address => is burnable\n    mapping (address => bool) public _burnList;\n\n    modifier onlyBridge() {\n        _onlyBridge();\n        _;\n    }\n    \n    /**\n        @param bridgeAddress Contract address of previously deployed Bridge.\n     */\n    constructor(\n        address          bridgeAddress\n    ) public {\n        _bridgeAddress = bridgeAddress;\n    }\n\n    function _onlyBridge() private view {\n        require(msg.sender == _bridgeAddress, \"sender must be bridge contract\");\n    }\n\n    /**\n        @notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n        {_contractAddressToResourceID}[{contractAddress}] are not already set,\n        then sets {_resourceIDToContractAddress} with {contractAddress},\n        {_contractAddressToResourceID} with {resourceID},\n        and {_contractWhitelist} to true for {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress) external override onlyBridge {\n\n        _setResource(resourceID, contractAddress);\n    }\n\n    /**\n        @notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\n        to true.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external override onlyBridge{\n        _setBurnable(contractAddress);\n    }\n\n    function withdraw(bytes memory data) external virtual override {}\n\n    function _setResource(bytes32 resourceID, address contractAddress) internal {\n        _resourceIDToTokenContractAddress[resourceID] = contractAddress;\n        _tokenContractAddressToResourceID[contractAddress] = resourceID;\n\n        _contractWhitelist[contractAddress] = true;\n    }\n\n    function _setBurnable(address contractAddress) internal {\n        require(_contractWhitelist[contractAddress], \"provided contract is not whitelisted\");\n        _burnList[contractAddress] = true;\n    }\n}\n",
  "sourcePath": "/home/isaiah/codes/NFT/chainbridge/chainbridge-solidity/contracts/handlers/HandlerHelpers.sol",
  "ast": {
    "absolutePath": "project:/contracts/handlers/HandlerHelpers.sol",
    "exportedSymbols": {
      "HandlerHelpers": [
        10528
      ],
      "IERCHandler": [
        10586
      ]
    },
    "id": 10529,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10392,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:51"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERCHandler.sol",
        "file": "../interfaces/IERCHandler.sol",
        "id": 10393,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10529,
        "sourceUnit": 10587,
        "src": "67:39:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10395,
              "name": "IERCHandler",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10586,
              "src": "300:11:51"
            },
            "id": 10396,
            "nodeType": "InheritanceSpecifier",
            "src": "300:11:51"
          }
        ],
        "canonicalName": "HandlerHelpers",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10394,
          "nodeType": "StructuredDocumentation",
          "src": "108:164:51",
          "text": "@title Function used across handler contracts.\n@author ChainSafe Systems.\n@notice This contract is intended to be used with the Bridge contract."
        },
        "fullyImplemented": true,
        "id": 10528,
        "linearizedBaseContracts": [
          10528,
          10586
        ],
        "name": "HandlerHelpers",
        "nameLocation": "282:14:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "318c136e",
            "id": 10398,
            "mutability": "immutable",
            "name": "_bridgeAddress",
            "nameLocation": "343:14:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "318:39:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10397,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a6d55d8",
            "id": 10402,
            "mutability": "mutable",
            "name": "_resourceIDToTokenContractAddress",
            "nameLocation": "444:33:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "408:69:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 10401,
              "keyType": {
                "id": 10399,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "417:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "408:28:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 10400,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "428:7:51",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8ba6c87",
            "id": 10406,
            "mutability": "mutable",
            "name": "_tokenContractAddressToResourceID",
            "nameLocation": "564:33:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "528:69:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 10405,
              "keyType": {
                "id": 10403,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "528:28:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 10404,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "548:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f79bea8",
            "id": 10410,
            "mutability": "mutable",
            "name": "_contractWhitelist",
            "nameLocation": "685:18:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "652:51:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10409,
              "keyType": {
                "id": 10407,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "661:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "652:25:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10408,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "672:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a70d081",
            "id": 10414,
            "mutability": "mutable",
            "name": "_burnList",
            "nameLocation": "788:9:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "755:42:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10413,
              "keyType": {
                "id": 10411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "764:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "755:25:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10412,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "775:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10420,
              "nodeType": "Block",
              "src": "826:41:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10416,
                      "name": "_onlyBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10444,
                      "src": "836:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:13:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10418,
                  "nodeType": "ExpressionStatement",
                  "src": "836:13:51"
                },
                {
                  "id": 10419,
                  "nodeType": "PlaceholderStatement",
                  "src": "859:1:51"
                }
              ]
            },
            "id": 10421,
            "name": "onlyBridge",
            "nameLocation": "813:10:51",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:2:51"
            },
            "src": "804:63:51",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10431,
              "nodeType": "Block",
              "src": "1035:47:51",
              "statements": [
                {
                  "expression": {
                    "id": 10429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10427,
                      "name": "_bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10398,
                      "src": "1045:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10428,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10424,
                      "src": "1062:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1045:30:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10430,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:30:51"
                }
              ]
            },
            "documentation": {
              "id": 10422,
              "nodeType": "StructuredDocumentation",
              "src": "877:88:51",
              "text": "@param bridgeAddress Contract address of previously deployed Bridge."
            },
            "id": 10432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10424,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nameLocation": "1008:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10432,
                  "src": "991:30:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:46:51"
            },
            "returnParameters": {
              "id": 10426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:51"
            },
            "scope": 10528,
            "src": "970:112:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10443,
              "nodeType": "Block",
              "src": "1124:88:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1142:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1142:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10438,
                          "name": "_bridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10398,
                          "src": "1156:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1142:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "id": 10440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        },
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        }
                      ],
                      "id": 10435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1134:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:71:51"
                }
              ]
            },
            "id": 10444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyBridge",
            "nameLocation": "1097:11:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:51"
            },
            "returnParameters": {
              "id": 10434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:51"
            },
            "scope": 10528,
            "src": "1088:124:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              10573
            ],
            "body": {
              "id": 10460,
              "nodeType": "Block",
              "src": "1869:59:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10456,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10447,
                        "src": "1893:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10457,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10449,
                        "src": "1905:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10455,
                      "name": "_setResource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10508,
                      "src": "1880:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10459,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:41:51"
                }
              ]
            },
            "documentation": {
              "id": 10445,
              "nodeType": "StructuredDocumentation",
              "src": "1218:551:51",
              "text": "@notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n{_contractAddressToResourceID}[{contractAddress}] are not already set,\nthen sets {_resourceIDToContractAddress} with {contractAddress},\n{_contractAddressToResourceID} with {resourceID},\nand {_contractWhitelist} to true for {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
            },
            "functionSelector": "b8fa3736",
            "id": 10461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10452,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10421,
                  "src": "1858:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1858:10:51"
              }
            ],
            "name": "setResource",
            "nameLocation": "1783:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1849:8:51"
            },
            "parameters": {
              "id": 10450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10447,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "1803:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "1795:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10446,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10449,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1823:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "1815:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1794:45:51"
            },
            "returnParameters": {
              "id": 10454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1869:0:51"
            },
            "scope": 10528,
            "src": "1774:154:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10579
            ],
            "body": {
              "id": 10474,
              "nodeType": "Block",
              "src": "2244:46:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10471,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10464,
                        "src": "2267:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10470,
                      "name": "_setBurnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10527,
                      "src": "2254:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:29:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10473,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:29:51"
                }
              ]
            },
            "documentation": {
              "id": 10462,
              "nodeType": "StructuredDocumentation",
              "src": "1934:231:51",
              "text": "@notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\nto true.\n@param contractAddress Address of contract to be used when making or executing deposits."
            },
            "functionSelector": "07b7ed99",
            "id": 10475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10467,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10421,
                  "src": "2234:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "2234:10:51"
              }
            ],
            "name": "setBurnable",
            "nameLocation": "2179:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2225:8:51"
            },
            "parameters": {
              "id": 10465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10464,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2199:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10475,
                  "src": "2191:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:25:51"
            },
            "returnParameters": {
              "id": 10469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2244:0:51"
            },
            "scope": 10528,
            "src": "2170:120:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10585
            ],
            "body": {
              "id": 10481,
              "nodeType": "Block",
              "src": "2359:2:51",
              "statements": []
            },
            "functionSelector": "0968f264",
            "id": 10482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2305:8:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2350:8:51"
            },
            "parameters": {
              "id": 10478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10477,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2327:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10482,
                  "src": "2314:17:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10476,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2313:19:51"
            },
            "returnParameters": {
              "id": 10480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2359:0:51"
            },
            "scope": 10528,
            "src": "2296:65:51",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10507,
              "nodeType": "Block",
              "src": "2443:206:51",
              "statements": [
                {
                  "expression": {
                    "id": 10493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10489,
                        "name": "_resourceIDToTokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10402,
                        "src": "2453:33:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 10491,
                      "indexExpression": {
                        "id": 10490,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10484,
                        "src": "2487:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2453:45:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10492,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10486,
                      "src": "2501:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2453:63:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10494,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:63:51"
                },
                {
                  "expression": {
                    "id": 10499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10495,
                        "name": "_tokenContractAddressToResourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10406,
                        "src": "2526:33:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 10497,
                      "indexExpression": {
                        "id": 10496,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10486,
                        "src": "2560:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2526:50:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10498,
                      "name": "resourceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10484,
                      "src": "2579:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2526:63:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10500,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:63:51"
                },
                {
                  "expression": {
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10501,
                        "name": "_contractWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10410,
                        "src": "2600:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10503,
                      "indexExpression": {
                        "id": 10502,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10486,
                        "src": "2619:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2600:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2638:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2600:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10506,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:42:51"
                }
              ]
            },
            "id": 10508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setResource",
            "nameLocation": "2376:12:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10484,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "2397:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10508,
                  "src": "2389:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10483,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10486,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2417:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10508,
                  "src": "2409:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2388:45:51"
            },
            "returnParameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:0:51"
            },
            "scope": 10528,
            "src": "2367:282:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10526,
              "nodeType": "Block",
              "src": "2711:144:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10514,
                          "name": "_contractWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10410,
                          "src": "2729:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10516,
                        "indexExpression": {
                          "id": 10515,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10510,
                          "src": "2748:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2729:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c6973746564",
                        "id": 10517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2766:38:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        },
                        "value": "provided contract is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        }
                      ],
                      "id": 10513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2721:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:84:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10519,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:84:51"
                },
                {
                  "expression": {
                    "id": 10524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10520,
                        "name": "_burnList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10414,
                        "src": "2815:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10522,
                      "indexExpression": {
                        "id": 10521,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10510,
                        "src": "2825:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2815:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2844:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2815:33:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10525,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:33:51"
                }
              ]
            },
            "id": 10527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBurnable",
            "nameLocation": "2664:12:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10510,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2685:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10527,
                  "src": "2677:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2676:25:51"
            },
            "returnParameters": {
              "id": 10512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2711:0:51"
            },
            "scope": 10528,
            "src": "2655:200:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10529,
        "src": "273:2584:51",
        "usedErrors": []
      }
    ],
    "src": "42:2816:51"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/handlers/HandlerHelpers.sol",
    "exportedSymbols": {
      "HandlerHelpers": [
        10528
      ],
      "IERCHandler": [
        10586
      ]
    },
    "id": 10529,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10392,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:51"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERCHandler.sol",
        "file": "../interfaces/IERCHandler.sol",
        "id": 10393,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10529,
        "sourceUnit": 10587,
        "src": "67:39:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10395,
              "name": "IERCHandler",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10586,
              "src": "300:11:51"
            },
            "id": 10396,
            "nodeType": "InheritanceSpecifier",
            "src": "300:11:51"
          }
        ],
        "canonicalName": "HandlerHelpers",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10394,
          "nodeType": "StructuredDocumentation",
          "src": "108:164:51",
          "text": "@title Function used across handler contracts.\n@author ChainSafe Systems.\n@notice This contract is intended to be used with the Bridge contract."
        },
        "fullyImplemented": true,
        "id": 10528,
        "linearizedBaseContracts": [
          10528,
          10586
        ],
        "name": "HandlerHelpers",
        "nameLocation": "282:14:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "318c136e",
            "id": 10398,
            "mutability": "immutable",
            "name": "_bridgeAddress",
            "nameLocation": "343:14:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "318:39:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10397,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a6d55d8",
            "id": 10402,
            "mutability": "mutable",
            "name": "_resourceIDToTokenContractAddress",
            "nameLocation": "444:33:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "408:69:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 10401,
              "keyType": {
                "id": 10399,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "417:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "408:28:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 10400,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "428:7:51",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8ba6c87",
            "id": 10406,
            "mutability": "mutable",
            "name": "_tokenContractAddressToResourceID",
            "nameLocation": "564:33:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "528:69:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 10405,
              "keyType": {
                "id": 10403,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "537:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "528:28:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 10404,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "548:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f79bea8",
            "id": 10410,
            "mutability": "mutable",
            "name": "_contractWhitelist",
            "nameLocation": "685:18:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "652:51:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10409,
              "keyType": {
                "id": 10407,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "661:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "652:25:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10408,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "672:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a70d081",
            "id": 10414,
            "mutability": "mutable",
            "name": "_burnList",
            "nameLocation": "788:9:51",
            "nodeType": "VariableDeclaration",
            "scope": 10528,
            "src": "755:42:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10413,
              "keyType": {
                "id": 10411,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "764:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "755:25:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10412,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "775:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10420,
              "nodeType": "Block",
              "src": "826:41:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10416,
                      "name": "_onlyBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10444,
                      "src": "836:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:13:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10418,
                  "nodeType": "ExpressionStatement",
                  "src": "836:13:51"
                },
                {
                  "id": 10419,
                  "nodeType": "PlaceholderStatement",
                  "src": "859:1:51"
                }
              ]
            },
            "id": 10421,
            "name": "onlyBridge",
            "nameLocation": "813:10:51",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "823:2:51"
            },
            "src": "804:63:51",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10431,
              "nodeType": "Block",
              "src": "1035:47:51",
              "statements": [
                {
                  "expression": {
                    "id": 10429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10427,
                      "name": "_bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10398,
                      "src": "1045:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10428,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10424,
                      "src": "1062:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1045:30:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10430,
                  "nodeType": "ExpressionStatement",
                  "src": "1045:30:51"
                }
              ]
            },
            "documentation": {
              "id": 10422,
              "nodeType": "StructuredDocumentation",
              "src": "877:88:51",
              "text": "@param bridgeAddress Contract address of previously deployed Bridge."
            },
            "id": 10432,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10424,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nameLocation": "1008:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10432,
                  "src": "991:30:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "991:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "981:46:51"
            },
            "returnParameters": {
              "id": 10426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1035:0:51"
            },
            "scope": 10528,
            "src": "970:112:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10443,
              "nodeType": "Block",
              "src": "1124:88:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1142:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1142:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10438,
                          "name": "_bridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10398,
                          "src": "1156:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1142:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "id": 10440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1172:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        },
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        }
                      ],
                      "id": 10435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1134:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:71:51"
                }
              ]
            },
            "id": 10444,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyBridge",
            "nameLocation": "1097:11:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1108:2:51"
            },
            "returnParameters": {
              "id": 10434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:51"
            },
            "scope": 10528,
            "src": "1088:124:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              10573
            ],
            "body": {
              "id": 10460,
              "nodeType": "Block",
              "src": "1869:59:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10456,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10447,
                        "src": "1893:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10457,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10449,
                        "src": "1905:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10455,
                      "name": "_setResource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10508,
                      "src": "1880:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1880:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10459,
                  "nodeType": "ExpressionStatement",
                  "src": "1880:41:51"
                }
              ]
            },
            "documentation": {
              "id": 10445,
              "nodeType": "StructuredDocumentation",
              "src": "1218:551:51",
              "text": "@notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n{_contractAddressToResourceID}[{contractAddress}] are not already set,\nthen sets {_resourceIDToContractAddress} with {contractAddress},\n{_contractAddressToResourceID} with {resourceID},\nand {_contractWhitelist} to true for {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
            },
            "functionSelector": "b8fa3736",
            "id": 10461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10453,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10452,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10421,
                  "src": "1858:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1858:10:51"
              }
            ],
            "name": "setResource",
            "nameLocation": "1783:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10451,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1849:8:51"
            },
            "parameters": {
              "id": 10450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10447,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "1803:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "1795:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10446,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1795:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10449,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1823:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10461,
                  "src": "1815:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1815:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1794:45:51"
            },
            "returnParameters": {
              "id": 10454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1869:0:51"
            },
            "scope": 10528,
            "src": "1774:154:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10579
            ],
            "body": {
              "id": 10474,
              "nodeType": "Block",
              "src": "2244:46:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10471,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10464,
                        "src": "2267:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10470,
                      "name": "_setBurnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10527,
                      "src": "2254:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:29:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10473,
                  "nodeType": "ExpressionStatement",
                  "src": "2254:29:51"
                }
              ]
            },
            "documentation": {
              "id": 10462,
              "nodeType": "StructuredDocumentation",
              "src": "1934:231:51",
              "text": "@notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\nto true.\n@param contractAddress Address of contract to be used when making or executing deposits."
            },
            "functionSelector": "07b7ed99",
            "id": 10475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10467,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10421,
                  "src": "2234:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "2234:10:51"
              }
            ],
            "name": "setBurnable",
            "nameLocation": "2179:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2225:8:51"
            },
            "parameters": {
              "id": 10465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10464,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2199:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10475,
                  "src": "2191:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2191:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2190:25:51"
            },
            "returnParameters": {
              "id": 10469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2244:0:51"
            },
            "scope": 10528,
            "src": "2170:120:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              10585
            ],
            "body": {
              "id": 10481,
              "nodeType": "Block",
              "src": "2359:2:51",
              "statements": []
            },
            "functionSelector": "0968f264",
            "id": 10482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2305:8:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10479,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2350:8:51"
            },
            "parameters": {
              "id": 10478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10477,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2327:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10482,
                  "src": "2314:17:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10476,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2314:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2313:19:51"
            },
            "returnParameters": {
              "id": 10480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2359:0:51"
            },
            "scope": 10528,
            "src": "2296:65:51",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10507,
              "nodeType": "Block",
              "src": "2443:206:51",
              "statements": [
                {
                  "expression": {
                    "id": 10493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10489,
                        "name": "_resourceIDToTokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10402,
                        "src": "2453:33:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 10491,
                      "indexExpression": {
                        "id": 10490,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10484,
                        "src": "2487:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2453:45:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10492,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10486,
                      "src": "2501:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2453:63:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10494,
                  "nodeType": "ExpressionStatement",
                  "src": "2453:63:51"
                },
                {
                  "expression": {
                    "id": 10499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10495,
                        "name": "_tokenContractAddressToResourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10406,
                        "src": "2526:33:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 10497,
                      "indexExpression": {
                        "id": 10496,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10486,
                        "src": "2560:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2526:50:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10498,
                      "name": "resourceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10484,
                      "src": "2579:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2526:63:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10500,
                  "nodeType": "ExpressionStatement",
                  "src": "2526:63:51"
                },
                {
                  "expression": {
                    "id": 10505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10501,
                        "name": "_contractWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10410,
                        "src": "2600:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10503,
                      "indexExpression": {
                        "id": 10502,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10486,
                        "src": "2619:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2600:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2638:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2600:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10506,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:42:51"
                }
              ]
            },
            "id": 10508,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setResource",
            "nameLocation": "2376:12:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10484,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "2397:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10508,
                  "src": "2389:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10483,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10486,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2417:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10508,
                  "src": "2409:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2388:45:51"
            },
            "returnParameters": {
              "id": 10488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2443:0:51"
            },
            "scope": 10528,
            "src": "2367:282:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10526,
              "nodeType": "Block",
              "src": "2711:144:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10514,
                          "name": "_contractWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10410,
                          "src": "2729:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10516,
                        "indexExpression": {
                          "id": 10515,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10510,
                          "src": "2748:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2729:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c6973746564",
                        "id": 10517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2766:38:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        },
                        "value": "provided contract is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        }
                      ],
                      "id": 10513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2721:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:84:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10519,
                  "nodeType": "ExpressionStatement",
                  "src": "2721:84:51"
                },
                {
                  "expression": {
                    "id": 10524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10520,
                        "name": "_burnList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10414,
                        "src": "2815:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10522,
                      "indexExpression": {
                        "id": 10521,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10510,
                        "src": "2825:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2815:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2844:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2815:33:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10525,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:33:51"
                }
              ]
            },
            "id": 10527,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBurnable",
            "nameLocation": "2664:12:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10511,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10510,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2685:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10527,
                  "src": "2677:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10509,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2676:25:51"
            },
            "returnParameters": {
              "id": 10512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2711:0:51"
            },
            "scope": 10528,
            "src": "2655:200:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10529,
        "src": "273:2584:51",
        "usedErrors": []
      }
    ],
    "src": "42:2816:51"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-02T16:03:25.559Z",
  "devdoc": {
    "author": "ChainSafe Systems.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "bridgeAddress": "Contract address of previously deployed Bridge."
        }
      },
      "setBurnable(address)": {
        "params": {
          "contractAddress": "Address of contract to be used when making or executing deposits."
        }
      },
      "setResource(bytes32,address)": {
        "params": {
          "contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
          "resourceID": "ResourceID to be used when making deposits."
        }
      },
      "withdraw(bytes)": {
        "params": {
          "data": "ABI-encoded withdrawal params relevant to the handler."
        }
      }
    },
    "title": "Function used across handler contracts.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setBurnable(address)": {
        "notice": "First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true."
      },
      "setResource(bytes32,address)": {
        "notice": "First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}."
      },
      "withdraw(bytes)": {
        "notice": "Withdraw funds from ERC safes."
      }
    },
    "notice": "This contract is intended to be used with the Bridge contract.",
    "version": 1
  }
}